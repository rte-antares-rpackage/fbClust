% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusteringTypicalDaysForOneClass.R
\name{clusterTypicalDaysForOneClass}
\alias{clusterTypicalDaysForOneClass}
\title{Generate a set of flow-based typical days on one time period}
\usage{
clusterTypicalDaysForOneClass(dates, PLAN, VERT = NULL,
  country_list = list(NL = c("BE", "DE", "FR", "AT")),
  nbCluster = NULL, reportPath = NULL, hourWeight = rep(1, 24),
  className = NULL, report = F, id_start = 1,
  maxDomainSize = 20000)
}
\arguments{
\item{dates}{\code{character}, vector of date (format YYYY-MM-DD).}

\item{PLAN}{\code{data.table}, at least ram, Date, Period and two ptdf columns :
\itemize{
 \item ptdfAT : autrichian vertices
 \item ptdfBE : belgium vertices
 \item ptdfDE : german vertices
 \item ptdfFR : french vertices
 \item ram : line limits
 \item Date : date in format YYYY-MM-DD
 \item Period : hour in the day, between 1 and 24
}
PLAN is generated in this format with the function \link{getPreprocPlan}}

\item{VERT}{\code{data.table}, the same Date, Period and ptdf  we have
in PLAN. Default = NULL 
This parameter can be obtained with the function \link{getVertices}.}

\item{country_list}{\code{list}, list of countries in the ptdf, with the ones which should
sustracted to the others as the names of the arrays which themself contain the ones which
be sustracted}

\item{nbCluster}{\code{numeric}, number of clusters}

\item{reportPath}{\code{character}, path where the report is written.}

\item{hourWeight}{\code{numeric}, vector of 24 weights, one for each hour of the day. The clustering algorithm
will be more accurate for the flow-based domains of the hours with a relatively higher weight.}

\item{className}{\code{character}, name of the class characterizing the studied time period}

\item{report}{\code{boolean}, if TRUE, reports are generated.}

\item{id_start}{\code{numeric}, first identifier of the returned typical days. Default value is 1}

\item{maxDomainSize}{\code{numeric} limit of domain size in each axis. The function will return an error if one domain
or more exceed these limits.}
}
\description{
Run a clustering algorithm for a given historical period. It creates clusters by
gathering the most similar days and chooses among them the best
representative: it will be a so-called typical day. The metric used to determine the similarity of two days is
a weighted sum of 24 hourly distances, meaning the distances between the domains of the two
days at the same hour.
}
\examples{

\dontrun{
library(data.table)
library(quadprog)
PLAN <- readRDS(system.file("testdata/plan_test2.rds", package = "fbClust"))
dates <- seq(as.Date("2018-10-02"), as.Date("2018-10-04"), by = "day")
hourWeight = rep(1, 24)
nbcluster <- 2
maxDomainSize <- 20000
id_start <- 1
country_list <- list(NL = c("BE", "DE", "FR", "AT"))

 clusterTypicalDaysForOneClass(
 dates = dates, PLAN = PLAN, VERT = NULL, maxDomainSize = maxDomainSize,
 country_list = country_list,
 nbCluster = nbcluster,report = F, hourWeight = hourWeight, id_start = id_start)

}

}
