% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/manipulateAllTypeDays.R
\name{manipulateAllTypeDays}
\alias{manipulateAllTypeDays}
\title{Manipulate the output data.table of the clustering function}
\usage{
manipulateAllTypeDays(allTypeDay, output)
}
\arguments{
\item{allTypeDay}{\code{data.table} the output data.table of one of the functions 
\link{clusterTypicalDaysForOneClass} and \link{clusteringTypicalDays}.
\itemize{
 \item TypicalDay : The typical day of the cluster defined by the idDayType column.
 \item Class : The class of the clustering (typically, one of the classes obtained
 with the \link{getCalendar} function).
 \item dayIn : The details of the days in the cluster.
 \item distance : The distance of each day of the cluster to the typical day.
 \item idDayType : The id of the cluster.
}}

\item{output}{\code{character} The type of output you want to return (either ptdf, ptdfraw, vertices or summary)
\itemize{
 \item ptdf : The ptdf obtained after differenciation 
 \item ptdfraw : The raw ptdf (obtained just after \link{getPreprocPlan})
 \item vertices : The vertices obtained with the function \link{getVertices}
 \item summary : A summary of the clustering in a data.table with the following column :
 \itemize{
  \item TypicalDay : The typical day of the cluster
  \item idDayType : The id of the cluster
  \item Class : The class of the clustering
  \item nbDaysCluster : The number of days in the cluster
  }
}}
}
\description{
This function has been built in order to help the user to manipulate
the output object of the functions \link{clusterTypicalDaysForOneClass} and
\link{clusteringTypicalDays}. The user can choose to get a summary of the clustering realised,
the vertices of the input data, the raw ptdf of the input data or the ptdf after 
differenciation of the input data.
}
\examples{

\dontrun{
library(data.table)
allTypeDay <- readRDS(system.file("testdata/allTypDays.rds", package = "fbClust"))

PLAN <- manipulateAllTypeDays(allTypeDay, "ptdf")
PLANRaw <- manipulateAllTypeDays(allTypeDay, "ptdfraw")
VERT <- manipulateAllTypeDays(allTypeDay, "vertices")
summary <- manipulateAllTypeDays(allTypeDay, "summary")

}

}
